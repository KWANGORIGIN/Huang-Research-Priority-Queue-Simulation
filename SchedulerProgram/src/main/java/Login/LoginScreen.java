/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Login;
import SchedulingSystem.*;
import ShoppingCart.ShoppingCartWindow;
import Student.Student;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.*;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 * JFrame that acts as the LoginScreen for the program
 * @author Kevin Wang
 */
public class LoginScreen extends javax.swing.JFrame {
    private SchedulingSystem schedulingSystem;
    
    /**
     * Creates new form LoginScreen
     */
    public LoginScreen() {
        initComponents();
        this.setExtendedState(this.getExtendedState() | this.MAXIMIZED_BOTH);
    }
    
    /**
     * This is the constructor to be used. It takes in a SchedulingSystem object
     * @param schedulingSystem SchedulingSystem object that will be used throughout the system
     */
    public LoginScreen(SchedulingSystem schedulingSystem){
        initComponents();
        this.schedulingSystem = schedulingSystem;
        
        schedulingSystem.setPSU_Icon(this);
        
//        this.setExtendedState(this.getExtendedState() | this.MAXIMIZED_BOTH);
        usernameTextField.addKeyListener(new KeyAdapter(){
                
            @Override
            public void keyPressed(KeyEvent e){
                if(e.getKeyCode() == KeyEvent.VK_ENTER){
                    loginButton.doClick();
                }
            }
            
        });
        
        passwordField.addKeyListener(new KeyAdapter(){
                
            @Override
            public void keyPressed(KeyEvent e){
                if(e.getKeyCode() == KeyEvent.VK_ENTER){
                    loginButton.doClick();
                }
            }
            
        });
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        usernameLabel.setText("Username:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(275, 36, 0, 0);
        getContentPane().add(usernameLabel, gridBagConstraints);

        passwordLabel.setText("Password:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 36, 0, 0);
        getContentPane().add(passwordLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 167;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(272, 4, 0, 62);
        getContentPane().add(usernameTextField, gridBagConstraints);

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 117;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 4, 0, 62);
        getContentPane().add(loginButton, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 167;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 4, 0, 62);
        getContentPane().add(passwordField, gridBagConstraints);

//        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\wanga\\Documents\\NetBeansProjects\\Dynamic-queue-scheduler\\SchedulerProgram\\src\\main\\resources\\KSU_8027.jpg")); // NOI18N
        try{
            jLabel1.setIcon(new ImageIcon(getClass().getClassLoader().getResource("KSU_8027.jpg")));
        }catch(Exception e){
            e.printStackTrace();
            System.out.println("Unable to load image");
        }

        jLabel1.setText("jLabel1");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 6;
        gridBagConstraints.ipadx = -215;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(jLabel1, gridBagConstraints);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Event handler for when the loginButton is pressed. Creates a ShoppingCartWindow for user to sign up to courses with.
     * @param evt 
     */
    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        
        //Imports or creates workbook students.xlsx depending on if file exists
        XSSFWorkbook workbook = new XSSFWorkbook();
        XSSFSheet sheet = workbook.createSheet();
        XSSFRow newRow;
        Cell cell;

        try(FileInputStream in = new FileInputStream("students.xlsx")){
            workbook = new XSSFWorkbook(in);
            sheet = workbook.getSheet("Student Details");

            in.close();
            System.out.println("Successfully opened students.xlsx");

        }catch(FileNotFoundException e){
            System.out.println("File not found. Creating new file...");

            //Creates a blank workbook and sheet
            workbook = new XSSFWorkbook();
            sheet = workbook.createSheet("Student Details");

            //Creates titles for columns
            newRow = sheet.createRow(0);
            cell = newRow.createCell(0);
            cell.setCellValue("Username");
            cell = newRow.createCell(1);
            cell.setCellValue("Login Timestamp");
            cell = newRow.createCell(2);
            cell.setCellValue("Course Added TimeStamp");

//                //Resets last inputted row to 0
//                SchedulingSystem.lastInputtedRow = 0;

            System.out.println("Successfully created students.xlsx");
        }catch(IOException e){
            System.out.println("Unknown error opening file.");
        }

        //Adds usernameTextField input to student details sheet as entered
        String username = usernameTextField.getText();

        //Creates new Student or imports existing Student
        Student student = new Student();
        int rowPosition = 0;
        try(FileInputStream input = new FileInputStream(username + ".ser")){//attempts to load in existing Student
            try(ObjectInputStream inputStudent = new ObjectInputStream(input)){

                student = (Student) inputStudent.readObject();

                rowPosition = student.getRowPosition();
                
                System.out.println(student.getUsername() + " loaded in successfully");
                student.printCoursesEnrolled();

            }
        }catch(FileNotFoundException fileNotFound){//if existing student not found, then creates new student and saves to file
            rowPosition = SchedulingSystem.lastInputtedRow + 1;
            student = new Student(username, rowPosition, schedulingSystem.getTimer());

            //Saves new Student object
            try(FileOutputStream outputFile = new FileOutputStream(username + ".ser")){
                try(ObjectOutputStream output = new ObjectOutputStream(outputFile)){
                    output.writeObject(student);
                    System.out.println("Student " + username + " successfully saved.");
                }
            }catch(FileNotFoundException noFile){
                System.out.println("File not found");
            }catch(IOException ioException){
                System.out.println("Error saving to file.");
            }

        }catch(ClassNotFoundException classNotFound){
            JOptionPane.showMessageDialog(null, "Error reading Student from file.");
        }catch(IOException e){
            JOptionPane.showMessageDialog(null, "Unknown error trying to load in student. File possibly corrupted.");
        }
        
        student.setLogInTime();
        //Creates ShoppingCartWindow screen
        schedulingSystem.setCurrentStudent(student);
        ShoppingCartWindow cart = new ShoppingCartWindow(student, schedulingSystem);
        cart.setVisible(true);
        
        this.dispose();
        
    }//GEN-LAST:event_loginButtonActionPerformed
    
    /**
     * Event handler that ensures the SchedulingSystem object is saved to a file when the LoginScreen is closed
     * @param evt 
     */
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        //Outputs scheduling system to file
        
        try(FileOutputStream outputFile = new FileOutputStream("SchedulingSystem.ser")){
            try(ObjectOutputStream output = new ObjectOutputStream(outputFile)){
                output.writeObject(schedulingSystem);
                System.out.println("Changes from this session have been saved.");
            }
            
        }catch(FileNotFoundException fileNotFound){
            System.out.println("File not found"); 
        }catch(IOException ioException){
            System.out.println("Error saving to file.");
        }
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginScreen().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
